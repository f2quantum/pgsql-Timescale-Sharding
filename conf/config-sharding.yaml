#Sharding-Proxy支持多逻辑数据源，每个以config-前缀命名的yaml配置文件，即为一个逻辑数据源。以下是config-xxx.yaml的配置配置示例。
# refer: 
#逻辑数据源名称
schemaName: gisdb

#省略数据源配置，与数据分片一致
# refer: https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/
dataSources:
  ds_0: 
    url: jdbc:postgresql://timescaledb01:5432/gisdb_0
    username: timescaledb
    password: password
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 65
  ds_1:
    url: jdbc:postgresql://timescaledb01:5432/gisdb_1
    username: timescaledb
    password: password
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 65

  ds_2: 
    url: jdbc:postgresql://timescaledb02:5432/gisdb_0
    username: timescaledb
    password: password
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 65

  ds_3: 
    url: jdbc:postgresql://timescaledb02:5432/gisdb_1
    username: timescaledb
    password: password
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 65


rules:
- !SHARDING 
# 字段参考 https://shardingsphere.apache.org/document/5.1.2/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/
  tables:
    time_series: #需要进行分表的表名
      actualDataNodes: ds_${0..3}.time_series_${0..1} # 表达式，将表分为time_series_0 , time_series_1
      tableStrategy: #分表策略
        standard: # 用于单分片键的标准分片场景
          shardingColumn: id
          shardingAlgorithmName: time_series_inline
      keyGenerateStrategy: # 分布式序列策略
        column: id
        keyGeneratorName: snowflake
      auditStrategy:
        auditorNames:
          - sharding_key_required_auditor
        allowHintDisable: true
  defaultShardingColumn: id
  bindingTables: # 解决笛卡尔积问题（主从集群，当存在有关联关系表时候，联合查询数据会有重复的问题）
    - time_series
  defaultDatabaseStrategy: # 分库策略
    standard:
      shardingColumn: id
      shardingAlgorithmName: database_inline
  defaultTableStrategy: # 设置所有的表默认不进行分表，如果要进行分表，则进行如上单独的配置即可
    none:
  shardingAlgorithms:
    database_inline:
      type: INLINE
      props:
        algorithm-expression: ds_${id % 4}
    time_series_inline:
      type: INLINE
      props:
        algorithm-expression: time_series_${id % 2}

  keyGenerators:
    snowflake: # 雪花算法名称，自定义名称
      type: SNOWFLAKE
  auditors:
    sharding_key_required_auditor:
      type: DML_SHARDING_CONDITIONS

